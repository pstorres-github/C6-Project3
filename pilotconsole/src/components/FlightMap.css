@import './Defaults.css';

.flightmap-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;

    width: 100%;
    height: 100%;
}

.menu {
    grid-row-start: 1;
    grid-row-end: -1;
    grid-column-start: 1;
    grid-column-end: -1;

    margin: 0;
    padding: 0;

    height: 100%;
}

.menu-container {
    margin: 0;
    padding: 0;

    height: 100%;

    border-radius: var(--border-radius-small);

    display: grid;
    grid-template-columns: 4.125rem 1fr 1fr 1.125rem;
    grid-template-rows: 1.125rem 4.35rem auto auto;
    gap: 0;
}

.spacer {
    width: 0rem;
}

.position-map {
    grid-row-start: 1;
    grid-row-end: -1;
    grid-column-start: 1;
    grid-column-end: -1;

    /* border: 3px solid red; */
    width: 100%;
    height: 100%;

    z-index: 0;
    /* background-color: chartreuse; */
}

.mapid {
    /* height: max-content; */
    height: 100%;
}

/* 46vh is a temp happypath solution for the
time being. This needs to be refactored
to get size and then responsively set the size of the
map element. Requires an event listener/useRef? and an
await for componentDidMount.
var height = document.getElementById('foo').offsetHeight
console.log(document.getElementById('id').getBoundingClientRect())
-VDR. */

.leaflet-container {
    width: 100%;
    height: 46.35vh;
    /* height: 40vh; */
    /* height: 100%; */

    overflow: hidden;
}

.lat-long {
    text-align: right;
    z-index: 1;
    grid-row-start: 1;
    grid-row-end: 2;
    grid-column-start: 3;
    grid-column-end: -1;
    /* background-color: var(--identify-me); */
    padding: var(--padding-tiny);
}

.form-container {
    /* "starting coordinates" */

    z-index: 1;
    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 4;

    margin: 0;
    padding: 0;
    padding-top: var(padding-tiny);
    background-color: var(--ghost-transparent);
    /* background-color: red; */

    text-align: right;
}

input[name='latitude'],
input[name='longitude'] {
    border: 0px solid white;
}

.recording-container {
    /* recording options */
    text-align: right;
    padding: 0;
    margin: 0;

    z-index: 1;

    grid-row-start: 4;
    grid-row-end: -1;
    grid-column-start: 2;
    grid-column-end: 4;
    padding-left: var(--padding);
    padding-top: var(--padding-tiny);
    padding-bottom: 1.125rem;
    background-color: var(--ghost-transparent);
    /* background-color: blue; */
    align-self: end;
}

.recording-button {
    display: inline-block;
    margin: 0;
    margin-left: var(--padding-tiny);
}

.form-item {
    display: inline-block;
    margin: 0;
    padding: 0;
    margin-right: var(--padding-tiny);
    padding-right: var(--padding-tiny);
}

.map-button {
    padding-left: var(--padding-tiny);
    /* border: 4px solid red; */
}
